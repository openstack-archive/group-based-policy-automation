[tox]
envlist = py35,py34,py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
         OS_TEST_PATH=heat/tests
         TESTR_START_DIR=heat/tests
usedevelop = True
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/newton} {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  find {toxinidir} -not -path '{toxinidir}/.tox/*' -name '*.pyc' -delete
  python setup.py testr --slowest --testr-args='{posargs}'

whitelist_externals =
  bash
  find
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:py27log]
commands =
  find . -type f -name "*.pyc" -delete
  bash tools/pretty_tox.sh '^(?!heat_integrationtests){posargs}'

[testenv:pep8]
commands =
    flake8 heat bin/heat-api bin/heat-api-cfn bin/heat-api-cloudwatch bin/heat-engine bin/heat-manage contrib heat_integrationtests doc/source
    python tools/custom_guidelines.py --exclude heat/engine/resources/aws

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands =
  python setup.py testr --coverage --testr-args='^(?!heat_integrationtests){posargs}'

[testenv:docs]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       sphinxcontrib-httpdomain
commands = python setup.py build_sphinx

[testenv:api-ref]
# This environment is called from CI scripts to test and publish
# the API Ref to developer.openstack.org.
#
# we do not used -W here because we are doing some slightly tricky
# things to build a single page document, and as such, we are ok
# ignoring the duplicate stanzas warning.
whitelist_externals = bash
                      rm
commands =
  rm -rf api-ref/build
  sphinx-build -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:genconfig]
commands =
    oslo-config-generator --config-file=config-generator.conf

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -c bandit.yaml -r heat -n5 -p heat_conservative

[flake8]
show-source = true
exclude=.*,dist,*openstack/common*,*lib/python*,*egg,build,*convergence/scenarios/*
max-complexity=20

[hacking]
import_exceptions = heat.common.i18n
local-check-factory = heat.hacking.checks.factory

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:install-guide]
commands = sphinx-build -a -E -W -d install-guide/build/doctrees -b html install-guide/source install-guide/build/html
